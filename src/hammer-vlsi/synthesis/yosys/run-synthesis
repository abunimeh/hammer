#!/bin/bash

unset yosys
v=()
unset output
unset top
lib=()
while [[ "$1" != "" ]]
do
    case "$1" in
    "$0") ;;
    */yosys) yosys="$1";;
    "-o") output="$2"; shift;;
    "--top") top="$2"; shift;;
    *.v) v+=("$1");;
    *.lib) lib+=("$1");;
    *) echo "Unknown argument $1"; exit 1;;
    esac
    shift
done

workdir="$(dirname "$output")/yosys"
rm -rf "$workdir"
mkdir -p "$workdir"

cat > $workdir/syn.tcl <<EOF
# read design 
read_verilog ${v[@]}

# elaborate design hierarchy
hierarchy -check -top ${top}

# the high-level stuff
proc; opt; fsm; opt; memory; opt

# mapping to internal cell library
techmap; opt

# mapping flip-flops to mycells.lib
dfflibmap -liberty ${lib[@]}

# mapping logic to mycells.lib
abc -liberty ${lib[@]}

# cleanup
clean

# write synthesized design
write_verilog ${output}
EOF

cd $workdir
$yosys < syn.tcl
